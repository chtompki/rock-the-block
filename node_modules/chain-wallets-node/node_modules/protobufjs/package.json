{
  "name": "protobufjs",
  "version": "4.0.0-b3",
  "description": "Protocol Buffers for JavaScript. Finally.",
  "author": {
    "name": "Daniel Wirtz",
    "email": "dcode@dcode.io"
  },
  "contributors": [
    {
      "name": "Frank Xu",
      "email": "yyfrankyy@gmail.com"
    }
  ],
  "main": "index.js",
  "bin": {
    "pbjs": "./bin/pbjs"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/dcodeIO/ProtoBuf.js.git"
  },
  "bugs": {
    "url": "https://github.com/dcodeIO/ProtoBuf.js/issues"
  },
  "keywords": [
    "net",
    "buffer",
    "protobuf",
    "serialization",
    "bytebuffer",
    "websocket",
    "webrtc"
  ],
  "dependencies": {
    "bytebuffer": "~3 >=3.5",
    "ascli": "~1"
  },
  "devDependencies": {
    "testjs": "~1 >=1.0.4",
    "metascript": ">=0.18 <1",
    "closurecompiler": "~1",
    "jsdoc": "~3.3.0-alpha10"
  },
  "license": "Apache-2.0",
  "engines": {
    "node": ">=0.8"
  },
  "scripts": {
    "prepublish": "npm test",
    "test": "node bin/pbjs tests/complex.proto -target=json > tests/complex.json && node node_modules/testjs/bin/testjs tests/suite.js",
    "make": "npm run-script build && npm run-script compile && npm run-script descriptor2json && npm run-script compress && npm test && npm run-script jsdoc",
    "build": "node scripts/build.js",
    "descriptor2json": "node bin/pbjs src/google/protobuf/descriptor.proto -target=json > src/google/protobuf/descriptor.json",
    "compile": "npm run-script compile-full && npm run-script compile-noparse",
    "compile-full": "ccjs dist/ProtoBuf.js --create_source_map=dist/ProtoBuf.min.map --compilation_level=SIMPLE_OPTIMIZATIONS > dist/ProtoBuf.min.js",
    "compile-noparse": "ccjs dist/ProtoBuf.noparse.js --create_source_map=dist/ProtoBuf.noparse.min.map --compilation_level=SIMPLE_OPTIMIZATIONS > dist/ProtoBuf.noparse.min.js",
    "compress": "npm run-script compress-full && npm run-script compress-noparse",
    "compress-full": "gzip -c -9 dist/ProtoBuf.min.js > dist/ProtoBuf.min.js.gz",
    "compress-noparse": "gzip -c -9 dist/ProtoBuf.noparse.min.js > dist/ProtoBuf.noparse.min.js.gz",
    "jsdoc": "node node_modules/jsdoc/jsdoc.js -c jsdoc.json"
  },
  "readme": "![ProtoBuf.js - Protocol Buffers for JavaScript. Finally.](https://raw.github.com/dcodeIO/ProtoBuf.js/master/ProtoBuf.png)\n=====================================\n**Protocol Buffers** are a language-neutral, platform-neutral, extensible way of serializing structured data for use\nin communications protocols, data storage, and more, originally designed at Google ([see](https://developers.google.com/protocol-buffers/docs/overview)).\n\n**ProtoBuf.js** is a pure JavaScript implementation on top of [ByteBuffer.js](https://github.com/dcodeIO/ByteBuffer.js)\nincluding a .proto parser, message class building and simple encoding and decoding. There is no compilation step\nrequired, it's super easy to use and it works out of the box on .proto files!\n\n[![Build Status](https://travis-ci.org/dcodeIO/ProtoBuf.js.svg?branch=master)](https://travis-ci.org/dcodeIO/ProtoBuf.js)\n[![Donate](https://raw.githubusercontent.com/dcodeIO/Long.js/master/donate.png)](https://www.paypal.com/cgi-bin/webscr?cmd=_donations&business=info%40code-emitter.com&item_name=Open%20Source%3A%20ProtoBuf.js)\n\nGetting started\n---------------\n* **Step 1:** Become familar with [Google's Protocol Buffers (protobuf)](https://developers.google.com/protocol-buffers/docs/overview)\n* **Step 2:** Head straight to [our wiki for up to date usage information, changes and examples](https://github.com/dcodeIO/ProtoBuf.js/wiki)\n* **Step 3:** Build something cool! :-)\n\nFeatures\n--------\n* [RequireJS](http://requirejs.org/)/AMD compatible\n* [node.js](http://nodejs.org)/CommonJS compatible, also available via [npm](https://npmjs.org/package/protobufjs)\n* Browser compatible\n* [Closure Compiler](https://developers.google.com/closure/compiler/) compatible (fully annotated, [externs](https://github.com/dcodeIO/ProtoBuf.js/tree/master/externs))\n* Fully documented using [jsdoc3](https://github.com/jsdoc3/jsdoc)\n* Well tested through [test.js](https://github.com/dcodeIO/test.js)\n* [ByteBuffer.js](https://github.com/dcodeIO/ByteBuffer.js) is the only production dependency\n* Fully compatible to the official implementation including advanced features\n* Small footprint (even smaller if you use a noparse build)\n* proto2js command line utility\n\nDocumentation\n-------------\n* [Read the official protobuf guide](https://developers.google.com/protocol-buffers/docs/overview)\n* [Read our wiki](https://github.com/dcodeIO/ProtoBuf.js/wiki)\n* [Read the API docs](http://htmlpreview.github.io/?https://raw.githubusercontent.com/dcodeIO/ProtoBuf.js/master/docs/ProtoBuf.html)\n* [Check out the examples](https://github.com/dcodeIO/ProtoBuf.js/tree/master/examples)\n\nTests\n-----\n* [View source](https://github.com/dcodeIO/ProtoBuf.js/blob/master/tests/suite.js)\n* [View report](https://travis-ci.org/dcodeIO/ProtoBuf.js)\n\nDownloads\n---------\n* [Distributions](https://github.com/dcodeIO/ProtoBuf.js/tree/master/dist)\n* [ZIP-Archive](https://github.com/dcodeIO/ProtoBuf.js/archive/master.zip)\n* [Tarball](https://github.com/dcodeIO/ProtoBuf.js/tarball/master)\n\nContributors\n------------\n[Daniel Wirtz](https://github.com/dcodeIO) (maintainer), [Frank Xu](https://github.com/yyfrankyy),\n[Dretch](https://github.com/Dretch), [shirmin](https://github.com/shirmin), [Nikolai Vavilov](https://github.com/seishun)\n\n**License:** [Apache License, Version 2.0](http://www.apache.org/licenses/LICENSE-2.0.html) - Logo derived from [W3C HTML5 Logos](http://www.w3.org/html/logo/) (CC A 3.0)\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/dcodeIO/ProtoBuf.js",
  "_id": "protobufjs@4.0.0-b3",
  "_shasum": "b83400981d460814400aeaa33365f96b16dbad98",
  "_resolved": "git+https://github.com/erykwalder/ProtoBuf.js#d071a64400b86a015d61fb9f84bad92eccf090ab",
  "_from": "protobufjs@git+https://github.com/erykwalder/ProtoBuf.js#build"
}
